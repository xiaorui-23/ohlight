import t from"../utils/handle.js";import e from"../utils/isEmpty.js";import l from"../utils/keywordSplit.js";import s from"../utils/stable.js";class i extends HTMLElement{lightKeywords;lightStyles;lightBody;lightStable;lightDefaultStable;constructor(){super(),this.lightDefaultStable=200}renderer(){this.attachShadow({mode:"open"});let s=this.getAttributes("content"),i=this.getAttributes("keywords"),a=this.getAttributes("styles");const h=document.createElement("div");let d=l(i?.value||"",",");this.lightKeywords=d,this.lightStyles=a,this.lightBody=s,this.lightStable=Number(this.getAttributes("stableTime").value||this.lightDefaultStable),h.innerHTML=t(e(s?.value||""),d,a?.value||""),this.shadowRoot?.appendChild(h),this.load()}load(){this.dispatchedEvent("load",this)}connectedCallback(){this.renderer(),this.dispatchedEvent("onConnectedCallback")}disconnectedCallback(){this.dispatchedEvent("onDisconnectedCallback")}adoptedCallback(){this.dispatchedEvent("onAdoptedCallback")}attributeChangedCallback(t,e,l){s((()=>{let s={name:t,oldValue:e,newValue:l};this.update(this,s),this.dispatchedEvent("onAttributeChangedCallback",s)}),this.lightStable)}static get observedAttributes(){return["content","keywords","styles","stableTime"]}update(s,i){const a=s.shadowRoot,{name:h,oldValue:d,newValue:n}=i;h.includes("content")&&null!=d?this.lightBody.value=n:h.includes("keywords")&&null!=d?this.lightKeywords=l(n||"",","):h.includes("styles")&&null!=d?this.lightStyles.value=n:h.includes("stableTime")&&null!=d&&(this.lightStable=parseInt(n||this.lightDefaultStable)),null!=d&&(a.innerHTML=t(e(this.lightBody.value||""),this.lightKeywords,this.lightStyles.value||""))}getAttributes(t){return this.attributes[t]||{}}dispatchedEvent(t,e){this.dispatchEvent(new CustomEvent(t,{detail:e}))}}customElements.define("o-light",i);export{i as default};
